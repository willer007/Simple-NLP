format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> C:\Simple-NLP\build\classes\scala\main
compile options:
2 items
0 -> -deprecation
1 -> -unchecked
javac options:
9 items
0 -> -source
1 -> 1.8
2 -> -target
3 -> 1.8
4 -> -d
5 -> C:\Simple-NLP\build\classes\scala\main
6 -> -g
7 -> -proc:none
8 -> -XDuseUnsharedTable=true
compiler version:
1 items
0 -> 2.13.2
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
41 items
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> C:\Simple-NLP\build\classes\scala\main\simple\csv\Row$.class
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> C:\Simple-NLP\build\classes\scala\main\simple\csv\Row.class
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> C:\Simple-NLP\build\classes\scala\main\simple\csv\SimpleCSV$.class
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> C:\Simple-NLP\build\classes\scala\main\simple\csv\SimpleCSV.class
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\category\Category$.class
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\category\Category.class
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Data$.class
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Data.class
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Dataset$.class
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Dataset.class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\binary\EncoderBinary$.class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\binary\EncoderBinary.class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\EncoderLSI$.class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\EncoderLSI.class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\SVD$.class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\SVD.class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\Cluster$.class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\Cluster.class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\LearningLloyds$.class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\LearningLloyds.class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\evolutionary\LearningGenetic$.class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\evolutionary\LearningGenetic.class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemma$.class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemma.class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemmatizer$$anonfun$extractLemma$2.class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemmatizer$.class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemmatizer.class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\tokens\NormalizerTokens$.class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\tokens\NormalizerTokens.class
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorArray$.class
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorArray.class
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorLexical$.class
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorLexical.class
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\similarity\SimilarityCossine$.class
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\similarity\SimilarityCossine.class
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\SimpleNLP$.class
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\SimpleNLP.class
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\tokenization\Tokenization$.class
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> C:\Simple-NLP\build\classes\scala\main\simple\nlp\tokenization\Tokenization.class
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\build\classes\scala\main\simple\sentiment\Analisys$.class
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\build\classes\scala\main\simple\sentiment\Analisys.class
binary dependencies:
41 items
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-core_2.12\2.4.4\6e606150eb038cccf319869de3c0cd32e6f9d2ff\spark-core_2.12-2.4.4.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-mllib_2.12\2.4.4\f366b5382c1fd482a5901ca3ecb38224590fcb14\spark-mllib_2.12-2.4.4.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-mllib_2.12\2.4.4\f366b5382c1fd482a5901ca3ecb38224590fcb14\spark-mllib_2.12-2.4.4.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-mllib_2.12\2.4.4\f366b5382c1fd482a5901ca3ecb38224590fcb14\spark-mllib_2.12-2.4.4.jar
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
24 items
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
41 items
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> simple.csv.Row
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> simple.csv.Row$
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> simple.csv.SimpleCSV
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> simple.csv.SimpleCSV$
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> simple.nlp.category.Category
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> simple.nlp.category.Category$
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> simple.nlp.dataset.Data
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> simple.nlp.dataset.Data$
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> simple.nlp.dataset.Dataset
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> simple.nlp.dataset.Dataset$
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> simple.nlp.encoder.binary.EncoderBinary
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> simple.nlp.encoder.binary.EncoderBinary$
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> simple.nlp.encoder.wordembedding.EncoderLSI
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> simple.nlp.encoder.wordembedding.EncoderLSI$
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> simple.nlp.encoder.wordembedding.SVD
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> simple.nlp.encoder.wordembedding.SVD$
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> simple.nlp.learning.clustering.Cluster
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> simple.nlp.learning.clustering.Cluster$
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> simple.nlp.learning.clustering.LearningLloyds
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> simple.nlp.learning.clustering.LearningLloyds$
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> simple.nlp.learning.evolutionary.LearningGenetic
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> simple.nlp.learning.evolutionary.LearningGenetic$
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> simple.nlp.normalizer.lemmatizer.Lemma
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> simple.nlp.normalizer.lemmatizer.Lemma$
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> simple.nlp.normalizer.lemmatizer.Lemmatizer
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> simple.nlp.normalizer.lemmatizer.Lemmatizer$
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> simple.nlp.normalizer.lemmatizer.Lemmatizer$$anonfun$extractLemma$2
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> simple.nlp.normalizer.tokens.NormalizerTokens
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> simple.nlp.normalizer.tokens.NormalizerTokens$
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> simple.nlp.operator.OperatorArray
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> simple.nlp.operator.OperatorArray$
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> simple.nlp.operator.OperatorLexical
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> simple.nlp.operator.OperatorLexical$
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> simple.nlp.similarity.SimilarityCossine
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> simple.nlp.similarity.SimilarityCossine$
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> simple.nlp.SimpleNLP
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> simple.nlp.SimpleNLP$
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> simple.nlp.tokenization.Tokenization
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> simple.nlp.tokenization.Tokenization$
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> simple.sentiment.Analisys
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> simple.sentiment.Analisys$
used names:
1215 items
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> &&
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> <repeated...>
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> ==
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> ?0
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> A
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> AbstractFunction1
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Any
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Array
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> BufferedSource
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Byte
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Charset
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Class
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Codec
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Files
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Int
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Iterator
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> ModuleSerializationProxy
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> None
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Object
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> OpenOption
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Option
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Path
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Paths
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Product
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Row
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Serializable
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> SimpleCSV
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Some
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Source
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> StandardCharsets
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Statics
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> String
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> T
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> T0
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> UTF_8
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> _hashCode
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> _toString
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> asInstanceOf
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> charset
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> close
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> columns
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> csv
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> eq
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> fallbackSystemCodec
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> file
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> fileTemp
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> fromFile
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> get
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> getBytes
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> io
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> ioobe
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> java
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> mkString
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> nio
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> package
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> path
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> scala
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> simple
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> source
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> text
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> typedProductIterator
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> write
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> ||
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> &&
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> ==
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> ?0
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> A
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> AbstractFunction2
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Category
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Double
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Iterator
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> ModuleSerializationProxy
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> None
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Option
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Product
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Serializable
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Some
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Statics
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> T0
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> T1
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> T2
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> _hashCode
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> _toString
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> asInstanceOf
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> category
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> eq
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> ioobe
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> name
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> query
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> typedProductIterator
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> ||
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> &&
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> ==
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> ?0
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> A
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> AbstractFunction1
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Data
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Iterator
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> ModuleSerializationProxy
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> None
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Option
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Product
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Serializable
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Some
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> Statics
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> T0
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> _hashCode
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> _toString
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> asInstanceOf
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> content
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> dataset
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> eq
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> ioobe
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> typedProductIterator
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> ||
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> BufferedSource
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Codec
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Data
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Dataset
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Source
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> close
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> dataset
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> fallbackSystemCodec
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> file
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> fileTemp
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> fromFile
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> io
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> l
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> mkString
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> source
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> split
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> +
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> +:
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> ->
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> >=
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> A
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> ArrowAssoc
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> EncoderBinary
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> IntManifest
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> K
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> ManifestFactory
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Map
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Range
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Set
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> U
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> V
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> V1
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> arrayToken
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> binary
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> encoder
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> foreach
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> indices
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> intArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> numberOfTokens
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> numberOfTokens_=
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> ofDim
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> setTokens
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> stringDecoded
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> t
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> token
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> tokenDecoder
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> tokenDecoder_=
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> tokenEncoder
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> tokenEncoder_=
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> tokenOccurrence
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> tokenPosition
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> tokensEncoded
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> update
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> A
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> ArrayBuffer
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> DenseVector
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Double
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> DoubleManifest
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> EncoderLSI
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> IndexedSeq
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> ManifestFactory
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Matrix
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> OperatorArray
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> RDD
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> RowMatrix
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> SVD
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Seq
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> SingularValueDecomposition
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> SparkConf
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> SparkContext
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> U
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> V
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Vector
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> Vectors
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> _$2
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> _$3
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> apache
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> arrayClass
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> aux
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> auxV
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> clearCallSite
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> clearJobGroup
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> collect
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> collection
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> computeSVD
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> copyArrayToImmutableIndexedSeq
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> dataEncoded
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> dataEncoded_=
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> dense
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> distributed
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> encodeQuery
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> encoder
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> inputs
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> inputsParallel
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> intArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> inverse
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> linalg
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> mllib
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> multiply
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> multiplyArrayCoordinates
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> mutable
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> numOfDimensions
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> operator
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> org
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> parallelize
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> productUQ
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> q
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> rowMatrixInputs
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> rows
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> s
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> sInverse
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> set
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> setAppName
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> setMaster
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> spark
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> sparkConf
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> sparkContext
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> stop
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> svd
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> toArray
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> toDouble
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> transpose
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> v
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> wordembedding
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> &&
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> <repeated>
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> ==
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> ?0
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> A
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> DenseMatrix
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Double
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Iterator
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Matrix
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> ModuleSerializationProxy
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> None
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Option
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Product
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> SVD
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Serializable
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Some
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Statics
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> T0
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> T1
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> T2
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> T3
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Tuple3
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> U
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> V
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Vector
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> Vectors
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> _$2
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> _$3
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> _hashCode
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> _toString
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> apache
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> arrayClass
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> asInstanceOf
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> dense
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> encoder
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> eq
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> ioobe
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> linalg
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> mllib
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> org
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> s
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> spark
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> typedProductIterator
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> wordembedding
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> zeros
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> ||
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> &&
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> +=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> <byname>
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ==
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ?0
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> A
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ArrayBuffer
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Cluster
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Float
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> FloatManifest
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Iterator
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ManifestFactory
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ModuleSerializationProxy
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> None
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Option
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Product
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Random
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Serializable
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Some
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Statics
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> T0
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> T1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> T2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> _hashCode
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> _toString
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> asInstanceOf
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> centroid
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> cluster
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> clustering
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> collection
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> data
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> eq
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> fill
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ioobe
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> learning
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> mutable
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> nextFloat
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> size
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> typedProductIterator
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> util
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> ||
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> +:
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> /
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> ArrayBuffer
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Cluster
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> DeprecatedFloatOrdering
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Float
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> FloatManifest
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Function2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Inclusive
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> LearningLloyds
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> ManifestFactory
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> OperatorArray
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Ordering
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Range
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> RichInt
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> T1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> T2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> U
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> _1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> _2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> addData
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> assignDataToCluster
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> c
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> calculeClusterMean
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> centroid
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> cleanClusterData
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> cluster
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> clusterDataMean
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> clustering
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> clusters
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> clustersOrdenedByDistance
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> clusters_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> collection
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> createCluster
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> d
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> d1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> d2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> data
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> distanceClusterFromData
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> euclideanDistance
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> floatArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> foreach
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> inputs
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> intWrapper
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> isEmpty
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> iterations
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> k
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> learning
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> length
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> math
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> mutable
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> numOfClusters
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> numOfClusters_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> numOfDimension
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> numOfDimension_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> operator
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> optimize
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> reduce
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> setCentroid
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> sortBy
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> sumArrayCoordinates
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> t
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> to
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> unchecked
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> +
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> ++
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> -
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> /
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> :+
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> <byname>
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> ArraySeq
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> DeprecatedFloatOrdering
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Double
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Float
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> FloatIsFractional
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> FloatManifest
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Inclusive
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> LearningGenetic
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> ManifestFactory
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Numeric
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> OperatorArray
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Ordering
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Random
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Range
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> RichInt
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> T1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> T2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> U
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> _$2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> _$3
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> _$9
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> _1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> _2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> a
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> abs
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> arrayClass
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> chromosome
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> chromosomeSize
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> chromosomeSize_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> chromossomeAux
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> chromossomeSortedByObjective
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> createChromosome
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> createGen
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> cromossome
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> cromossome1
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> cromossome2
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> crossover
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> crossoverSize
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> crossoverSize_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> elitismIndividual
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> elitismIndividuals
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> elitismSize
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> elitismSize_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> evolutionary
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> fill
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> floatArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> foreach
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> generation
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> generationSize
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> generationSize_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> i
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> index
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> input
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> intWrapper
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> iterations
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> learning
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> length
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> linearCombination
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> math
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> mutation
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> mutationChance
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> mutationChance_=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> nextFloat
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> nextGeneration
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> nextInt
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> objective
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> ofFloat
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> operator
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> optimize
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> prediction
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> print
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> println
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> processNextGeneration
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> slice
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> sortBy
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> sum
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> t
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> to
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> toDouble
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> unchecked
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> until
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> update
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> util
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> weights
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> wrapFloatArray
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> &&
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> ==
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> ?0
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> A
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> AbstractFunction2
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Iterator
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Lemma
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> ModuleSerializationProxy
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> None
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Option
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Product
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Serializable
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Some
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Statics
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> T0
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> T1
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> T2
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> _hashCode
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> _toString
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> asInstanceOf
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> eq
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> ioobe
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> lemma
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> lemmatizer
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> normalizer
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> token
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> typedProductIterator
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> ||
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> ==
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> A1
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> AbstractPartialFunction
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> B1
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> BufferedSource
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Lemma
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Lemmatizer
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Option
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> PartialFunction
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Source
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> T0
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> a
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> asInstanceOf
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> close
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> collectFirst
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> empty
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> file
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> filter
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> fromFile
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> get
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> io
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> l
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> lemma
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> lemmatizer
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> mkString
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> normalizer
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> portueseLemmas
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> portueseLemmas_=
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> source
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> split
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> stringPorgueseLemmas
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> token
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> unchecked
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> %
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> +
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> -
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> /
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> >=
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> Char
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> NormalizerTokens
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> StringOps
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> a
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> augmentString
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> b
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> binarySearch
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> equals
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> item
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> length
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> max
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> min
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> normalizer
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> slice
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> tokens
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> tokensArray
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> *
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> +
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> -
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> /
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> ArraySeq
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Double
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> DoubleIsFractional
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> DoubleManifest
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Float
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> FloatIsFractional
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> FloatManifest
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> IterableOnce
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> ManifestFactory
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Numeric
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> OperatorArray
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> Vector
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> _1
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> _2
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> a
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> apache
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> array1
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> array2
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> doubleArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> floatArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> linalg
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> math
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> mllib
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> ofDouble
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> ofFloat
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> operator
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> org
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> pow
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> spark
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> sqrt
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> sum
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> t
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> toArray
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> toDouble
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> toFloat
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> u
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> v
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> v1
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> v2
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> wrapDoubleArray
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> wrapFloatArray
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> zip
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> +
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> <
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> ==
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> BufferedSource
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Char
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> CharSequence
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Character
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Int
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> OperatorLexical
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Source
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> StringOps
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> U
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> a
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> at
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> augmentString
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> b
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> close
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> extractNumberAfterToken
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> extractSubstring
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> file
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> forall
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> foreach
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> fromFile
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> indexOf
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> io
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> isAllDigits
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> isDigit
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> java
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> lang
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> length
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> mkString
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> number
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> operator
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> qual$1
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> replace
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> s
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> slice
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> source
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> split
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> string_portuguese_stopwords
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> substring
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> t
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> to
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> token
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> tokenIndex
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> tokens
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> tokensSliced
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> trim
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> x
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> x$1
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> x$2
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> ||
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> *
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> /
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> ArraySeq
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Double
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> DoubleIsFractional
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> DoubleManifest
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> IterableOnce
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> ManifestFactory
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Numeric
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> OperatorArray
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> SimilarityCossine
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> _1
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> _2
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> arrayModulus
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> doubleArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> math
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> ofDouble
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> operator
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> similarity
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> sum
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> t
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> v1
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> v2
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> wrapDoubleArray
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> zip
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> Dataset
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> EncoderBinary
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> EncoderLSI
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> LearningGenetic
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> LearningLloyds
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> NormalizerTokens
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> OperatorArray
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> OperatorLexical
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> SimilarityCossine
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> SimpleNLP
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> Tokenization
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> Tokenizator
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> binary
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> clustering
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> dataset
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> encoder
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> evolutionary
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> learning
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> normalizer
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> operator
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> similarity
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> tokenization
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> tokens
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> wordembedding
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Any
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Array
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> B
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Boolean
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> CharSequence
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Class
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Form
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Normalizer
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Object
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> String
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> T
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> Tokenization
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> apply
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> contains
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> filter
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> isEmpty
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> java
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> map
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> normalize
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> package
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> regexTokenizerExpression
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> replaceAll
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> s
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> scala
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> simple
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> split
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> stopwords
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> text
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> toLowerCase
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> tokenization
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> trim
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> unary_!
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> +
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> <init>
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> <repeated>
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Analisys
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Any
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> AnyRef
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Array
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> ArrayOps
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> ArraySeq
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> B
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Class
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> ClassTag
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> DeprecatedDoubleOrdering
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Double
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> EncoderBinary
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> EncoderLSI
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Function1
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Function2
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Int
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> IterableOnce
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Nothing
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Object
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Ordering
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Predef
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> ScalaRunTime
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Set
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> SimilarityCossine
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> SimpleCSV
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> SimpleNLP
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> String
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> T
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Tokenization
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Tokenizator
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Tuple2
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> Unit
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> _$2
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> _$3
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> _$7
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> _1
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> _2
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> a
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> allTokens
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> apply
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> arrayClass
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> b
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> csv
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> d
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> data
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> dataset
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> datasetEncoded
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> datasetRows
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> datasetTokenized
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> encode
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> encodeQuery
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> encodeWithoutCount
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> encodedDataset
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> happy
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> happyExpression
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> happyLSI
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> happyText
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> loadTokens
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> map
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> materializeClassTag
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> math
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> nlp
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> ofRef
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> package
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> readCSV
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> reduce
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> refArrayOps
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> reflect
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> replaceAll
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> row
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> runtime
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> sad
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> sadExpression
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> sadLSI
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> sadText
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> scala
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> sentiment
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> similarityCossine
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> simple
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> slice
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> sortBy
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> split
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> toLowerCase
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> toSet
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> tokenizeByWhitespace
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> wrapRefArray
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> writeCSV
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> zip
product stamps:
41 items
C:\Simple-NLP\build\classes\scala\main\simple\csv\Row$.class -> lastModified(1614952667648)
C:\Simple-NLP\build\classes\scala\main\simple\csv\Row.class -> lastModified(1614952667645)
C:\Simple-NLP\build\classes\scala\main\simple\csv\SimpleCSV$.class -> lastModified(1614952667650)
C:\Simple-NLP\build\classes\scala\main\simple\csv\SimpleCSV.class -> lastModified(1614952667655)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\category\Category$.class -> lastModified(1614952667720)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\category\Category.class -> lastModified(1614952667717)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Data$.class -> lastModified(1614952667742)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Data.class -> lastModified(1614952667739)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Dataset$.class -> lastModified(1614952667782)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\dataset\Dataset.class -> lastModified(1614952667787)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\binary\EncoderBinary$.class -> lastModified(1614952667832)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\binary\EncoderBinary.class -> lastModified(1614952667833)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\EncoderLSI$.class -> lastModified(1614952667859)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\EncoderLSI.class -> lastModified(1614952667861)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\SVD$.class -> lastModified(1614952667885)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\encoder\wordembedding\SVD.class -> lastModified(1614952667882)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\Cluster$.class -> lastModified(1614952667914)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\Cluster.class -> lastModified(1614952667910)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\LearningLloyds$.class -> lastModified(1614952667942)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\clustering\LearningLloyds.class -> lastModified(1614952667944)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\evolutionary\LearningGenetic$.class -> lastModified(1614952667989)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\learning\evolutionary\LearningGenetic.class -> lastModified(1614952667991)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemma$.class -> lastModified(1614952668010)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemma.class -> lastModified(1614952668008)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemmatizer$$anonfun$extractLemma$2.class -> lastModified(1614952668034)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemmatizer$.class -> lastModified(1614952668029)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\lemmatizer\Lemmatizer.class -> lastModified(1614952668031)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\tokens\NormalizerTokens$.class -> lastModified(1614952668041)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\normalizer\tokens\NormalizerTokens.class -> lastModified(1614952668042)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorArray$.class -> lastModified(1614952668055)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorArray.class -> lastModified(1614952668057)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorLexical$.class -> lastModified(1614952668072)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\operator\OperatorLexical.class -> lastModified(1614952668074)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\similarity\SimilarityCossine$.class -> lastModified(1614952668079)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\similarity\SimilarityCossine.class -> lastModified(1614952668080)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\SimpleNLP$.class -> lastModified(1614952667685)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\SimpleNLP.class -> lastModified(1614952667688)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\tokenization\Tokenization$.class -> lastModified(1614952668092)
C:\Simple-NLP\build\classes\scala\main\simple\nlp\tokenization\Tokenization.class -> lastModified(1614952668093)
C:\Simple-NLP\build\classes\scala\main\simple\sentiment\Analisys$.class -> lastModified(1614952668110)
C:\Simple-NLP\build\classes\scala\main\simple\sentiment\Analisys.class -> lastModified(1614952668111)
source stamps:
19 items
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> hash(27eb489f97945caf6cd86bd560717c5e9651a6fe)
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> hash(31d57e62c54eec9336edb630c99a5780ccf0c7a7)
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> hash(2a6fe76825e62bb9d3a227165c9edcf11a460067)
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> hash(54dc05a5c3c34d92667a8c3f6bc3b0e33708f49b)
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> hash(94593efe1fcb0e7e0eacb93e69ae86d37aeeb582)
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> hash(02e9de5521df7621145a67e4667c152bf734bd8f)
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> hash(4e3ce812da25bd9839c1a4b5f860a16de99a694c)
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> hash(0027815c50388d8a6fd7f815a8f46b7caa46d23c)
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> hash(45c11bd9d8ad290cc527b6437e705bd84f78c3a6)
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> hash(afc4b23e92e9b21f3ebe7e35ac7b583b8abe9938)
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> hash(a2ae1860e081b7884236705d215d28a5a5504a57)
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> hash(3d498bd14355c403242046ae101c906a93b033bf)
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> hash(5b9ee51e98a4ff2eb31408324fea0f6e11aa131e)
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> hash(058f64134b6647629dc429b44dda06d6827a9757)
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> hash(2e60bc49d44aaa1dd17f859b5c95de9be342eb72)
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> hash(92e52ea3c2bca84dc30b79bed4f9985a75c6bb71)
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> hash(e8a46c554fb8132fb41ca09eb2c1de94c34a7c47)
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> hash(9df3e3542b31be67d5d3e03357356e15417818bd)
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> hash(cc87210b420097699affb346f2cea386f938ca0c)
binary stamps:
4 items
C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-core_2.12\2.4.4\6e606150eb038cccf319869de3c0cd32e6f9d2ff\spark-core_2.12-2.4.4.jar -> lastModified(1614902771443)
C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-mllib_2.12\2.4.4\f366b5382c1fd482a5901ca3ecb38224590fcb14\spark-mllib_2.12-2.4.4.jar -> lastModified(1614902755531)
C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar -> lastModified(1614905923965)
C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar -> lastModified(1614900392758)
class names:
4 items
C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-core_2.12\2.4.4\6e606150eb038cccf319869de3c0cd32e6f9d2ff\spark-core_2.12-2.4.4.jar -> org.apache.spark.SparkConf$
C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.apache.spark\spark-mllib_2.12\2.4.4\f366b5382c1fd482a5901ca3ecb38224590fcb14\spark-mllib_2.12-2.4.4.jar -> org.apache.spark.mllib.linalg.Vector
C:\Users\wcarneiroqui\.gradle\caches\modules-2\files-2.1\org.scala-lang\scala-library\2.13.2\280d2a51b3130cf869cb416404b2c0e44e433f3e\scala-library-2.13.2.jar -> scala.reflect.package$
C:\Users\wcarneiroqui\.jdks\corretto-1.8.0_282\jre\lib\rt.jar -> java.lang.Object
internal apis:
19 items
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw3q7Z2wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAjc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwKeWyV3QABm5vdGlmeXNxAH4ADFHx3MN0AANSb3dzcQB+AAxQXsB5dAAEd2FpdHNxAH4ADHIUc9B0AA0kYXNJbnN0YW5jZU9mc3EAfgAM+sRFq3QADHByb2R1Y3RBcml0eXNxAH4ADByq4It0AAZlcXVhbHNzcQB+AAy4yKZCdAAMYXNJbnN0YW5jZU9mc3EAfgAMU9aA0nQADHN5bmNocm9uaXplZHNxAH4ADPPIevd0AA0kaXNJbnN0YW5jZU9mc3EAfgAMpVcvknQACGNhbkVxdWFsc3EAfgAMEZS6wHQADXByb2R1Y3RQcmVmaXhzcQB+AAxXC16NdAAJbm90aWZ5QWxsc3EAfgAMLKnY4nQADGlzSW5zdGFuY2VPZnNxAH4ADPNaZ9R0AAdyZWFkQ1NWc3EAfgAMSyTWtnQABjxpbml0PnNxAH4ADNs/y0Z0AAI9PXNxAH4ADOeFuhx0AAdjb2x1bW5zc3EAfgAMRsqDxXQABWNsb25lc3EAfgAMftxI8HQABiRpbml0JHNxAH4ADNetJDF0AARjb3B5c3EAfgAMFoetbnQACHRvU3RyaW5nc3EAfgAM/jTCF3QAAiE9c3EAfgAMCD6RoXQACGdldENsYXNzc3EAfgAM5dRac3QADmNvcHkkZGVmYXVsdCQxc3EAfgAMQQjPrHQAEnByb2R1Y3RFbGVtZW50TmFtZXNxAH4ADKPw+WR0AAJuZXNxAH4ADM3Wvxl0AAh3cml0ZUNTVnNxAH4ADCxCMyJ0AAJlcXNxAH4ADGUHCFV0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAxRA1FjdAAJU2ltcGxlQ1NWc3EAfgAMJQTY7XQAAiMjc3EAfgAM9kRibXQACGZpbmFsaXplc3EAfgAMFB0R93QADnByb2R1Y3RFbGVtZW50c3EAfgAMmMXkOnQACGhhc2hDb2Rlc3EAfgAMiH9nPHQAE3Byb2R1Y3RFbGVtZW50TmFtZXNzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAOc2ltcGxlLmNzdi5Sb3d1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AdnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBdTAAJaW5oZXJpdGVkcQB+AF1MAAdwYXJlbnRzcQB+AF14cQB+AHtzcQB+AHZ1cQB+AFgAAAAAc3EAfgB2dXEAfgBYAAAAAHNxAH4AdnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAFc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AenQADFNlcmlhbGl6YWJsZXNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AenNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ak3QAAmlvc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJRzcQB+AId0AAdQcm9kdWN0c3EAfgCLc3EAfgCOdXEAfgCRAAAAAnNxAH4Ak3QABXNjYWxhcQB+AJpzcQB+AId0AAZFcXVhbHNxAH4AnXNxAH4Ah3QABk9iamVjdHNxAH4Ai3NxAH4AjnVxAH4AkQAAAANzcQB+AJNxAH4AlnNxAH4Ak3QABGxhbmdxAH4AmnNxAH4Ah3QAA0FueXEAfgCdc3EAfgBacQB+AGd1cQB+AGgAAAAAc3EAfgBqAHQAFHNpbXBsZS5jc3YuU2ltcGxlQ1NWdXEAfgBtAAAAAH5xAH4Ab3QABk1vZHVsZXVxAH4AcwAAAAF0AAxzY2FsYS5uYXRpdmVzcQB+AHZxAH4AfHNxAH4AdnNxAH4AfnNxAH4AdnVxAH4AWAAAAABzcQB+AHZ1cQB+AFgAAAAAc3EAfgB2dXEAfgCFAAAAAnNxAH4Ah3EAfgClc3EAfgCLc3EAfgCOdXEAfgCRAAAAA3NxAH4Ak3EAfgCWc3EAfgCTcQB+AKtxAH4AmnNxAH4Ah3EAfgCtc3EAfgCLc3EAfgCOdXEAfgCRAAAAAnNxAH4Ak3EAfgChcQB+AJp1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAnNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AApzaW1wbGUuY3N2c3EAfgDNdAAGc2ltcGxlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFCfrSJ+XlFyvbNhr1WBxfF6WUab+
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwuxObngAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwQ5Wd63QABm5vdGlmeXNxAH4ADK5zOBN0AARuYW1lc3EAfgAMHoMiG3QABHdhaXRzcQB+AAz938kDdAAOY29weSRkZWZhdWx0JDJzcQB+AAzUOg9NdAANJGFzSW5zdGFuY2VPZnNxAH4ADG1oWel0AAhDYXRlZ29yeXNxAH4ADJYuipJ0AAxwcm9kdWN0QXJpdHlzcQB+AAye1mCXdAAGZXF1YWxzc3EAfgAMApaHW3QADGFzSW5zdGFuY2VPZnNxAH4ADAt+caN0AAxzeW5jaHJvbml6ZWRzcQB+AAwoQsZSdAANJGlzSW5zdGFuY2VPZnNxAH4ADEhYWz50AAVxdWVyeXNxAH4ADMLNSnZ0AAhjYW5FcXVhbHNxAH4ADHQJfsR0AA1wcm9kdWN0UHJlZml4c3EAfgAMn0KSKXQACW5vdGlmeUFsbHNxAH4ADFjVyll0AAxpc0luc3RhbmNlT2ZzcQB+AAy8llwMdAAGPGluaXQ+c3EAfgAMGURM+HQAAj09c3EAfgAMm7+BwXQABWNsb25lc3EAfgAMcXPzCHQABiRpbml0JHNxAH4ADCAEwJZ0AARjb3B5c3EAfgAMDF78+nQACHRvU3RyaW5nc3EAfgAMSOmWdnQAAiE9c3EAfgAMieaKzHQACGdldENsYXNzc3EAfgAM4j7ju3QADmNvcHkkZGVmYXVsdCQxc3EAfgAMm8QG4HQAEnByb2R1Y3RFbGVtZW50TmFtZXNxAH4ADNHFoWZ0AAJuZXNxAH4ADFslhlZ0AAJlcXNxAH4ADAsxeT50AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAz1bsnOdAACIyNzcQB+AAzOxzYVdAAIZmluYWxpemVzcQB+AAzFT+XNdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAxfdDkhdAAIaGFzaENvZGVzcQB+AAxTj9L6dAATcHJvZHVjdEVsZW1lbnROYW1lc3NyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFt4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ABxzaW1wbGUubmxwLmNhdGVnb3J5LkNhdGVnb3J5dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AHRzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AW0wACWluaGVyaXRlZHEAfgBbTAAHcGFyZW50c3EAfgBbeHEAfgB5c3EAfgB0dXEAfgBWAAAAAHNxAH4AdHVxAH4AVgAAAABzcQB+AHR1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHh0AAxTZXJpYWxpemFibGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AHhzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AJF0AAJpb3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCSc3EAfgCFdAAHUHJvZHVjdHNxAH4AiXNxAH4AjHVxAH4AjwAAAAJzcQB+AJF0AAVzY2FsYXEAfgCYc3EAfgCFdAAGRXF1YWxzcQB+AJtzcQB+AIV0AAZPYmplY3RzcQB+AIlzcQB+AIx1cQB+AI8AAAADc3EAfgCRcQB+AJRzcQB+AJF0AARsYW5ncQB+AJhzcQB+AIV0AANBbnlxAH4Am3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAE3NpbXBsZS5ubHAuY2F0ZWdvcnlzcQB+AK50AAZzaW1wbGVzcQB+AK50AApzaW1wbGUubmxwc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFDHVfmLFTuyTNu22MMmaV4DM8Men
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw6vTNtwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAgc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwPI+5RHQABm5vdGlmeXNxAH4ADE5QAVJ0AAR3YWl0c3EAfgAMJYta1nQADSRhc0luc3RhbmNlT2ZzcQB+AAxNFiTmdAAMcHJvZHVjdEFyaXR5c3EAfgAMCANEAXQABmVxdWFsc3NxAH4ADMGRrxJ0AAxhc0luc3RhbmNlT2ZzcQB+AAwo6VzQdAAMc3luY2hyb25pemVkc3EAfgAMdAzZG3QADSRpc0luc3RhbmNlT2ZzcQB+AAxn7O11dAAIY2FuRXF1YWxzcQB+AAyt2ivhdAANcHJvZHVjdFByZWZpeHNxAH4ADFMusZl0AAlub3RpZnlBbGxzcQB+AAxirGZ/dAAMaXNJbnN0YW5jZU9mc3EAfgAMTPoYv3QABjxpbml0PnNxAH4ADNgOGKV0AAI9PXNxAH4ADEyI4FN0AAVjbG9uZXNxAH4ADNB8lid0AAYkaW5pdCRzcQB+AAwmFXY0dAAHY29udGVudHNxAH4ADL4x4Qd0AARjb3B5c3EAfgAMwLMTunQACHRvU3RyaW5nc3EAfgAMN+6XW3QAAiE9c3EAfgAMQLhmw3QACGdldENsYXNzc3EAfgAMd3UHM3QADmNvcHkkZGVmYXVsdCQxc3EAfgAMnym6HHQAEnByb2R1Y3RFbGVtZW50TmFtZXNxAH4ADJiWdUZ0AAJuZXNxAH4ADCqVYSp0AAREYXRhc3EAfgAMgefLE3QAAmVxc3EAfgAM0bm7lHQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADMal6q90AAIjI3NxAH4ADFHJTsJ0AAhmaW5hbGl6ZXNxAH4ADFU5i5x0AA5wcm9kdWN0RWxlbWVudHNxAH4ADAYkxkR0AAhoYXNoQ29kZXNxAH4ADOVbxLF0ABNwcm9kdWN0RWxlbWVudE5hbWVzc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AV3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAF3NpbXBsZS5ubHAuZGF0YXNldC5EYXRhdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AHBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AV0wACWluaGVyaXRlZHEAfgBXTAAHcGFyZW50c3EAfgBXeHEAfgB1c3EAfgBwdXEAfgBSAAAAAHNxAH4AcHVxAH4AUgAAAABzcQB+AHB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHR0AAxTZXJpYWxpemFibGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AHRzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AI10AAJpb3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCOc3EAfgCBdAAHUHJvZHVjdHNxAH4AhXNxAH4AiHVxAH4AiwAAAAJzcQB+AI10AAVzY2FsYXEAfgCUc3EAfgCBdAAGRXF1YWxzcQB+AJdzcQB+AIF0AAZPYmplY3RzcQB+AIVzcQB+AIh1cQB+AIsAAAADc3EAfgCNcQB+AJBzcQB+AI10AARsYW5ncQB+AJRzcQB+AIF0AANBbnlxAH4Al3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAEnNpbXBsZS5ubHAuZGF0YXNldHNxAH4AqnQABnNpbXBsZXNxAH4AqnQACnNpbXBsZS5ubHBzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAXgCrfiPdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAJkM6XFNpbXBsZS1OTFBcYnVpbGRcY2xhc3Nlc1xzY2FsYVxtYWludAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUKm/naCXmK7nToicWXJ7c8RpGAGc=
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwRDdcqwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwYZkI8HQABm5vdGlmeXNxAH4ADF+atXR0AAR3YWl0c3EAfgAMM5el13QADSRhc0luc3RhbmNlT2ZzcQB+AAxXsuaKdAAGZXF1YWxzc3EAfgAMwHqao3QAB0RhdGFzZXRzcQB+AAyVCWmUdAAMYXNJbnN0YW5jZU9mc3EAfgAMNe02WXQADHN5bmNocm9uaXplZHNxAH4ADKPpSWF0AA0kaXNJbnN0YW5jZU9mc3EAfgAMJv8Xo3QABGxvYWRzcQB+AAxNiBUPdAAJbm90aWZ5QWxsc3EAfgAMVe9F1nQADGlzSW5zdGFuY2VPZnNxAH4ADCbiqqV0AAI9PXNxAH4ADINO6F50AAVjbG9uZXNxAH4ADIIRa+h0AAdkYXRhc2V0c3EAfgAMDoZ/23QACHRvU3RyaW5nc3EAfgAMuDVByHQAAiE9c3EAfgAMEvpj2nQACGdldENsYXNzc3EAfgAMrGVuIHQAAm5lc3EAfgAMhvwS/HQAAmVxc3EAfgAMqmd0rXQAAiMjc3EAfgAMHh8zEHQACGZpbmFsaXplc3EAfgAMTGSj9HQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAGnNpbXBsZS5ubHAuZGF0YXNldC5EYXRhc2V0dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQADHNjYWxhLm5hdGl2ZXNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBcc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AYXNxAH4AXHVxAH4APgAAAABzcQB+AFx1cQB+AD4AAAAAc3EAfgBcdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBgdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBgc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB5dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB6c3EAfgBtdAADQW55c3EAfgBxc3EAfgB0dXEAfgB3AAAAAnNxAH4AeXQABXNjYWxhcQB+AIB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAA3NyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABJzaW1wbGUubmxwLmRhdGFzZXRzcQB+AIp0AAZzaW1wbGVzcQB+AIp0AApzaW1wbGUubmxwc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFFTcBaXDw02SZnqMP2vDsOM3CPSb
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwbLGF/AAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAYc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw1ISl9HQABm5vdGlmeXNxAH4ADLms8I50AAZlbmNvZGVzcQB+AAzUr7nIdAAEd2FpdHNxAH4ADPUjbAt0AA0kYXNJbnN0YW5jZU9mc3EAfgAMt10593QABmVxdWFsc3NxAH4ADJgDnsx0AAxhc0luc3RhbmNlT2ZzcQB+AAytbVEudAAKbG9hZFRva2Vuc3NxAH4ADHy9HJR0ABJlbmNvZGVXaXRob3V0Q291bnRzcQB+AAwniCLkdAAMc3luY2hyb25pemVkc3EAfgAMuoOZh3QADSRpc0luc3RhbmNlT2ZzcQB+AAwC6tdzdAAGZGVjb2Rlc3EAfgAM8Y+U3HQACW5vdGlmeUFsbHNxAH4ADBj/1FV0AAxpc0luc3RhbmNlT2ZzcQB+AAzQatTWdAACPT1zcQB+AAyB5YuTdAAFY2xvbmVzcQB+AAyF6PMjdAAIdG9TdHJpbmdzcQB+AAwW97KvdAACIT1zcQB+AAy6mEd+dAAIZ2V0Q2xhc3NzcQB+AAzHke9DdAACbmVzcQB+AAxYwmGsdAACZXFzcQB+AAynBiSedAANRW5jb2RlckJpbmFyeXNxAH4ADEBla8J0AAIjI3NxAH4ADDN/6iJ0AAhmaW5hbGl6ZXNxAH4ADOZEOWF0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEd4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ACdzaW1wbGUubmxwLmVuY29kZXIuYmluYXJ5LkVuY29kZXJCaW5hcnl1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AGBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AR0wACWluaGVyaXRlZHEAfgBHTAAHcGFyZW50c3EAfgBHeHEAfgBlc3EAfgBgdXEAfgBCAAAAAHNxAH4AYHVxAH4AQgAAAABzcQB+AGB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGR0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGRzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AH10AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AH5zcQB+AHF0AANBbnlzcQB+AHVzcQB+AHh1cQB+AHsAAAACc3EAfgB9dAAFc2NhbGFxAH4AhHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAEnNpbXBsZS5ubHAuZW5jb2RlcnNxAH4AjnQABnNpbXBsZXNxAH4AjnQAGXNpbXBsZS5ubHAuZW5jb2Rlci5iaW5hcnlzcQB+AI50AApzaW1wbGUubmxwc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFJRZPv4fyw5+Dqy5PmmuhtN67rWC
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwkGc28AAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwv5JEPHQABm5vdGlmeXNxAH4ADIDw+st0AAZlbmNvZGVzcQB+AAwpVk6mdAAKRW5jb2RlckxTSXNxAH4ADKA8bFF0AAR3YWl0c3EAfgAMO20E43QADSRhc0luc3RhbmNlT2ZzcQB+AAwpx4R6dAAGZXF1YWxzc3EAfgAMknq2d3QADGFzSW5zdGFuY2VPZnNxAH4ADKyyH1N0AAxzeW5jaHJvbml6ZWRzcQB+AAxVwR6odAANJGlzSW5zdGFuY2VPZnNxAH4ADLQIzGF0AAlub3RpZnlBbGxzcQB+AAzWY9xcdAAMaXNJbnN0YW5jZU9mc3EAfgAMeO2HvnQAAj09c3EAfgAMn3LTc3QAC2VuY29kZVF1ZXJ5c3EAfgAMKDenBnQABWNsb25lc3EAfgAM3F6gtXQACHRvU3RyaW5nc3EAfgAMIb+LlHQAAiE9c3EAfgAMEFEpy3QACGdldENsYXNzc3EAfgAMsJHpvHQAAm5lc3EAfgAMhPJisXQAAmVxc3EAfgAMiiKgnXQAAiMjc3EAfgAMwkHSUXQACGZpbmFsaXplc3EAfgAM03BB5HQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAK3NpbXBsZS5ubHAuZW5jb2Rlci53b3JkZW1iZWRkaW5nLkVuY29kZXJMU0l1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFxzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBhc3EAfgBcdXEAfgA+AAAAAHNxAH4AXHVxAH4APgAAAABzcQB+AFx1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGB0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGBzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AHl0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHpzcQB+AG10AANBbnlzcQB+AHFzcQB+AHR1cQB+AHcAAAACc3EAfgB5dAAFc2NhbGFxAH4AgHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAEnNpbXBsZS5ubHAuZW5jb2RlcnNxAH4AinQABnNpbXBsZXNxAH4AinQACnNpbXBsZS5ubHBzcQB+AIp0ACBzaW1wbGUubmxwLmVuY29kZXIud29yZGVtYmVkZGluZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABeAKt+I91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAAmQzpcU2ltcGxlLU5MUFxidWlsZFxjbGFzc2VzXHNjYWxhXG1haW50AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQC6d5VId92IRRaZ+RmfBUr9zS9jw==
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwyzGCdwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAnc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwj8uh6HQABm5vdGlmeXNxAH4ADDtvxJV0AAd1bmFwcGx5c3EAfgAMAulUn3QAAXNzcQB+AAzGH7vmdAAEd2FpdHNxAH4ADP7B8IN0AA5jb3B5JGRlZmF1bHQkMnNxAH4ADDyE3k50AA0kYXNJbnN0YW5jZU9mc3EAfgAMd6oiL3QABWVtcHR5c3EAfgAMoOEweXQADHByb2R1Y3RBcml0eXNxAH4ADK/CXa50AAZlcXVhbHNzcQB+AAxQrcrddAADU1ZEc3EAfgAMG9CwnnQADGFzSW5zdGFuY2VPZnNxAH4ADHEy1mV0AAFVc3EAfgAMFnN8FXQADHN5bmNocm9uaXplZHNxAH4ADOu0kyR0AA0kaXNJbnN0YW5jZU9mc3EAfgAMiV/xOnQACGNhbkVxdWFsc3EAfgAMAEzOuHQADXByb2R1Y3RQcmVmaXhzcQB+AAyWVRtadAAJbm90aWZ5QWxsc3EAfgAMFu5MO3QADGlzSW5zdGFuY2VPZnNxAH4ADKUxiKp0AAY8aW5pdD5zcQB+AAyU5yA3dAABVnNxAH4ADFVCpVZ0AAVhcHBseXNxAH4ADH3VFhJ0AAI9PXNxAH4ADAhPiql0AAVjbG9uZXNxAH4ADJiaYSt0AAYkaW5pdCRzcQB+AAwdIITAdAAOY29weSRkZWZhdWx0JDNzcQB+AAzMXw2YdAAEY29weXNxAH4ADNjUTAl0AAh0b1N0cmluZ3NxAH4ADICw6wB0AAIhPXNxAH4ADK9iSvR0AAhnZXRDbGFzc3NxAH4ADL2I4V90AA5jb3B5JGRlZmF1bHQkMXNxAH4ADK4lTXV0ABJwcm9kdWN0RWxlbWVudE5hbWVzcQB+AAzDiYOidAACbmVzcQB+AAx11IO1dAACZXFzcQB+AAwUvz2wdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMU0r1sHQAAiMjc3EAfgAMXACteXQACGZpbmFsaXplc3EAfgAMnoMsvnQADnByb2R1Y3RFbGVtZW50c3EAfgAMeiF/CnQACGhhc2hDb2Rlc3EAfgAMwqpUIHQAE3Byb2R1Y3RFbGVtZW50TmFtZXNzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBleHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAkc2ltcGxlLm5scC5lbmNvZGVyLndvcmRlbWJlZGRpbmcuU1ZEdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AH5zcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AZUwACWluaGVyaXRlZHEAfgBlTAAHcGFyZW50c3EAfgBleHEAfgCDc3EAfgB+dXEAfgBgAAAAAHNxAH4AfnVxAH4AYAAAAABzcQB+AH51cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AIJ0AAxTZXJpYWxpemFibGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AIJzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AJt0AAJpb3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCcc3EAfgCPdAAHUHJvZHVjdHNxAH4Ak3NxAH4AlnVxAH4AmQAAAAJzcQB+AJt0AAVzY2FsYXEAfgCic3EAfgCPdAAGRXF1YWxzcQB+AKVzcQB+AI90AAZPYmplY3RzcQB+AJNzcQB+AJZ1cQB+AJkAAAADc3EAfgCbcQB+AJ5zcQB+AJt0AARsYW5ncQB+AKJzcQB+AI90AANBbnlxAH4ApXNxAH4AYnEAfgBvdXEAfgBwAAAAAHNxAH4AcgB0ACRzaW1wbGUubmxwLmVuY29kZXIud29yZGVtYmVkZGluZy5TVkR1cQB+AHUAAAAAfnEAfgB3dAAGTW9kdWxldXEAfgB7AAAAAXQADHNjYWxhLm5hdGl2ZXNxAH4AfnEAfgCEc3EAfgB+c3EAfgCGc3EAfgB+dXEAfgBgAAAAAHNxAH4AfnVxAH4AYAAAAABzcQB+AH51cQB+AI0AAAADc3EAfgCPcQB+AJJzcQB+AJNzcQB+AJZ1cQB+AJkAAAADc3EAfgCbcQB+AJ5zcQB+AJt0AAJpb3EAfgCic3EAfgCPcQB+AK1zcQB+AJNzcQB+AJZ1cQB+AJkAAAADc3EAfgCbcQB+AJ5zcQB+AJtxAH4As3EAfgCic3EAfgCPcQB+ALVzcQB+AJNzcQB+AJZ1cQB+AJkAAAACc3EAfgCbcQB+AKlxAH4AonVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAEnNpbXBsZS5ubHAuZW5jb2RlcnNxAH4A3HQABnNpbXBsZXNxAH4A3HQACnNpbXBsZS5ubHBzcQB+ANx0ACBzaW1wbGUubmxwLmVuY29kZXIud29yZGVtYmVkZGluZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABeAKt+I91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAAmQzpcU2ltcGxlLU5MUFxidWlsZFxjbGFzc2VzXHNjYWxhXG1haW50AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABROPOgS2iW9mDnBpLX4YKFt6ZppTA==
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwYKB5BAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAnc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwyGYRqHQABm5vdGlmeXNxAH4ADDWjBfd0AAd1bmFwcGx5c3EAfgAM4sTWL3QABHdhaXRzcQB+AAxnnzYadAAOY29weSRkZWZhdWx0JDJzcQB+AAzZKEW2dAANJGFzSW5zdGFuY2VPZnNxAH4ADM4Hdx50AAxwcm9kdWN0QXJpdHlzcQB+AAwvcbl4dAAGZXF1YWxzc3EAfgAMYPZ1s3QADGFzSW5zdGFuY2VPZnNxAH4ADP0cHsR0AAdhZGREYXRhc3EAfgAMQPyeE3QABGRhdGFzcQB+AAwP6g0BdAAMc3luY2hyb25pemVkc3EAfgAMXIabx3QADSRpc0luc3RhbmNlT2ZzcQB+AAzaNva9dAALc2V0Q2VudHJvaWRzcQB+AAw3GUsMdAAIY2FuRXF1YWxzcQB+AAyIYAxldAANcHJvZHVjdFByZWZpeHNxAH4ADG10Awl0AAlub3RpZnlBbGxzcQB+AAyUFoundAAMaXNJbnN0YW5jZU9mc3EAfgAM57sLNnQABjxpbml0PnNxAH4ADApFv6B0AAVhcHBseXNxAH4ADBNWpp90AAI9PXNxAH4ADGyQ8qd0AAVjbG9uZXNxAH4ADD8IYsF0AAYkaW5pdCRzcQB+AAwnyPsEdAAIY2VudHJvaWRzcQB+AAyuOSeOdAAEY29weXNxAH4ADKnZBAx0AAh0b1N0cmluZ3NxAH4ADOwpYUV0AAIhPXNxAH4ADK3bGcB0AAhnZXRDbGFzc3NxAH4ADKHF6Qd0AA5jb3B5JGRlZmF1bHQkMXNxAH4ADIZu/Mh0ABJwcm9kdWN0RWxlbWVudE5hbWVzcQB+AAw6Ax7udAAHQ2x1c3RlcnNxAH4ADDhhGjR0AAJuZXNxAH4ADL/bGjh0AA1jcmVhdGVDbHVzdGVyc3EAfgAMkd5b+HQAAmVxc3EAfgAMbc2K63QAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADAIqDVt0AAIjI3NxAH4ADE5OVAl0AAhmaW5hbGl6ZXNxAH4ADHMu8iR0AA5wcm9kdWN0RWxlbWVudHNxAH4ADLrbR210AAhoYXNoQ29kZXNxAH4ADMn0a350ABNwcm9kdWN0RWxlbWVudE5hbWVzc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AZXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAJnNpbXBsZS5ubHAubGVhcm5pbmcuY2x1c3RlcmluZy5DbHVzdGVydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AH5zcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AZUwACWluaGVyaXRlZHEAfgBlTAAHcGFyZW50c3EAfgBleHEAfgCDc3EAfgB+dXEAfgBgAAAAAHNxAH4AfnVxAH4AYAAAAABzcQB+AH51cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AIJ0AAxTZXJpYWxpemFibGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AIJzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AJt0AAJpb3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCcc3EAfgCPdAAHUHJvZHVjdHNxAH4Ak3NxAH4AlnVxAH4AmQAAAAJzcQB+AJt0AAVzY2FsYXEAfgCic3EAfgCPdAAGRXF1YWxzcQB+AKVzcQB+AI90AAZPYmplY3RzcQB+AJNzcQB+AJZ1cQB+AJkAAAADc3EAfgCbcQB+AJ5zcQB+AJt0AARsYW5ncQB+AKJzcQB+AI90AANBbnlxAH4ApXNxAH4AYnEAfgBvdXEAfgBwAAAAAHNxAH4AcgB0ACZzaW1wbGUubmxwLmxlYXJuaW5nLmNsdXN0ZXJpbmcuQ2x1c3RlcnVxAH4AdQAAAAB+cQB+AHd0AAZNb2R1bGV1cQB+AHsAAAABdAAMc2NhbGEubmF0aXZlc3EAfgB+cQB+AIRzcQB+AH5zcQB+AIZzcQB+AH51cQB+AGAAAAAAc3EAfgB+dXEAfgBgAAAAAHNxAH4AfnVxAH4AjQAAAANzcQB+AI9xAH4AknNxAH4Ak3NxAH4AlnVxAH4AmQAAAANzcQB+AJtxAH4AnnNxAH4Am3QAAmlvcQB+AKJzcQB+AI9xAH4ArXNxAH4Ak3NxAH4AlnVxAH4AmQAAAANzcQB+AJtxAH4AnnNxAH4Am3EAfgCzcQB+AKJzcQB+AI9xAH4AtXNxAH4Ak3NxAH4AlnVxAH4AmQAAAAJzcQB+AJtxAH4AqXEAfgCidXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATc2ltcGxlLm5scC5sZWFybmluZ3NxAH4A3HQABnNpbXBsZXNxAH4A3HQACnNpbXBsZS5ubHBzcQB+ANx0AB5zaW1wbGUubmxwLmxlYXJuaW5nLmNsdXN0ZXJpbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAXgCrfiPdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAJkM6XFNpbXBsZS1OTFBcYnVpbGRcY2xhc3Nlc1xzY2FsYVxtYWludAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUACeBXFA4jYpv1/gVqPRrfKpG0jw=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwSj4btAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAac3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwJvs9lnQABm5vdGlmeXNxAH4ADHFrIPB0AAlpbml0TW9kZWxzcQB+AAwe6HvXdAAEd2FpdHNxAH4ADGV7OzF0AA0kYXNJbnN0YW5jZU9mc3EAfgAMxuf4Y3QACG9wdGltaXplc3EAfgAM/lAzI3QAE2Fzc2lnbkRhdGFUb0NsdXN0ZXJzcQB+AAzPtRO4dAAGZXF1YWxzc3EAfgAME1aaM3QADGFzSW5zdGFuY2VPZnNxAH4ADCqfl2d0AAxzeW5jaHJvbml6ZWRzcQB+AAytCEgsdAANJGlzSW5zdGFuY2VPZnNxAH4ADH9smVV0AAlub3RpZnlBbGxzcQB+AAyx0O+AdAAOTGVhcm5pbmdMbG95ZHNzcQB+AAwJqBepdAAMaXNJbnN0YW5jZU9mc3EAfgAMCRlAp3QAAj09c3EAfgAMKxP7c3QABWNsb25lc3EAfgAM205wbXQAEmNhbGN1bGVDbHVzdGVyTWVhbnNxAH4ADAuy78p0AAh0b1N0cmluZ3NxAH4ADAPOAXN0AAIhPXNxAH4ADOH+Zs10AAhnZXRDbGFzc3NxAH4ADCBhMk90AAJuZXNxAH4ADE9w0wt0ABBjbGVhbkNsdXN0ZXJEYXRhc3EAfgAMMM1kBHQAF2Rpc3RhbmNlQ2x1c3RlckZyb21EYXRhc3EAfgAMxiwIEnQAAmVxc3EAfgAMtSwleHQAAiMjc3EAfgAMqFL+1XQACGZpbmFsaXplc3EAfgAML3EZhXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AS3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQALXNpbXBsZS5ubHAubGVhcm5pbmcuY2x1c3RlcmluZy5MZWFybmluZ0xsb3lkc3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AZHNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBLTAAJaW5oZXJpdGVkcQB+AEtMAAdwYXJlbnRzcQB+AEt4cQB+AGlzcQB+AGR1cQB+AEYAAAAAc3EAfgBkdXEAfgBGAAAAAHNxAH4AZHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AaHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AaHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AgXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AgnNxAH4AdXQAA0FueXNxAH4AeXNxAH4AfHVxAH4AfwAAAAJzcQB+AIF0AAVzY2FsYXEAfgCIdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATc2ltcGxlLm5scC5sZWFybmluZ3NxAH4AknQABnNpbXBsZXNxAH4AknQACnNpbXBsZS5ubHBzcQB+AJJ0AB5zaW1wbGUubmxwLmxlYXJuaW5nLmNsdXN0ZXJpbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAXgCrfiPdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAJkM6XFNpbXBsZS1OTFBcYnVpbGRcY2xhc3Nlc1xzY2FsYVxtYWludAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAURcEb2ditKQzFJ7ZDfnBb2E94w6Y=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw+ldo8QAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAcc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwWRH+knQABm5vdGlmeXNxAH4ADEjc4OJ0AAlpbml0TW9kZWxzcQB+AAzKS+B7dAAQZ2V0Q3Jvc3NvdmVyU2l6ZXNxAH4ADPTU0B90AAR3YWl0c3EAfgAMxHSKoHQADSRhc0luc3RhbmNlT2ZzcQB+AAwaTKIjdAAOZ2V0RWxpdGlzbVNpemVzcQB+AAxJ4j+ldAAIb3B0aW1pemVzcQB+AAyarNQrdAAQc2V0Q3Jvc3NvdmVyU2l6ZXNxAH4ADNjqC1h0AAZlcXVhbHNzcQB+AAx4qmHmdAARZ2V0TXV0YXRpb25DaGFuY2VzcQB+AAy1rAQrdAAMYXNJbnN0YW5jZU9mc3EAfgAM3WxF7XQADHN5bmNocm9uaXplZHNxAH4ADO/MOOd0AA0kaXNJbnN0YW5jZU9mc3EAfgAMhxfmYXQACW5vdGlmeUFsbHNxAH4ADGY1OoB0AAxpc0luc3RhbmNlT2ZzcQB+AAzzIykFdAAOc2V0RWxpdGlzbVNpemVzcQB+AAwE5fhidAARc2V0TXV0YXRpb25DaGFuY2VzcQB+AAw7cNI4dAACPT1zcQB+AAxkV/ihdAAFY2xvbmVzcQB+AAzEXCnzdAAIdG9TdHJpbmdzcQB+AAy1fY8FdAACIT1zcQB+AAysvSXudAAIZ2V0Q2xhc3NzcQB+AAy7XLkmdAAPTGVhcm5pbmdHZW5ldGljc3EAfgAMHBEhznQAAm5lc3EAfgAMeaR7BnQAAmVxc3EAfgAM/FTmGXQAAiMjc3EAfgAMPcZARnQACGZpbmFsaXplc3EAfgAMxu+XHXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AT3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAMHNpbXBsZS5ubHAubGVhcm5pbmcuZXZvbHV0aW9uYXJ5LkxlYXJuaW5nR2VuZXRpY3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AaHNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBPTAAJaW5oZXJpdGVkcQB+AE9MAAdwYXJlbnRzcQB+AE94cQB+AG1zcQB+AGh1cQB+AEoAAAAAc3EAfgBodXEAfgBKAAAAAHNxAH4AaHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AbHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AbHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AhXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AhnNxAH4AeXQAA0FueXNxAH4AfXNxAH4AgHVxAH4AgwAAAAJzcQB+AIV0AAVzY2FsYXEAfgCMdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATc2ltcGxlLm5scC5sZWFybmluZ3NxAH4AlnQAIHNpbXBsZS5ubHAubGVhcm5pbmcuZXZvbHV0aW9uYXJ5c3EAfgCWdAAGc2ltcGxlc3EAfgCWdAAKc2ltcGxlLm5scHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABeAKt+I91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAAmQzpcU2ltcGxlLU5MUFxidWlsZFxjbGFzc2VzXHNjYWxhXG1haW50AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSvxLI+kumyHz6+fjWse1g7ir6ZOA==
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwYihDBAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAic3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwkQ952HQABm5vdGlmeXNxAH4ADJBQ4PV0AAR3YWl0c3EAfgAMC926+HQADmNvcHkkZGVmYXVsdCQyc3EAfgAMOyho1nQADSRhc0luc3RhbmNlT2ZzcQB+AAw60DfkdAAMcHJvZHVjdEFyaXR5c3EAfgAMHjux53QABmVxdWFsc3NxAH4ADDyfNj10AAVsZW1tYXNxAH4ADNDJgWN0AAxhc0luc3RhbmNlT2ZzcQB+AAxtdATEdAAMc3luY2hyb25pemVkc3EAfgAMLVr7lHQADSRpc0luc3RhbmNlT2ZzcQB+AAy0BELHdAAIY2FuRXF1YWxzcQB+AAwUK7RNdAANcHJvZHVjdFByZWZpeHNxAH4ADDkwOmN0AAlub3RpZnlBbGxzcQB+AAxMpAhhdAAMaXNJbnN0YW5jZU9mc3EAfgAMq3cXs3QABjxpbml0PnNxAH4ADNB2BrR0AAI9PXNxAH4ADAmeYhh0AAVjbG9uZXNxAH4ADJSEbyB0AAV0b2tlbnNxAH4ADNJa+G10AAYkaW5pdCRzcQB+AAwxM3C0dAAEY29weXNxAH4ADKzyuY50AAh0b1N0cmluZ3NxAH4ADBHBf1l0AAIhPXNxAH4ADBRzsTh0AAhnZXRDbGFzc3NxAH4ADONNND90AA5jb3B5JGRlZmF1bHQkMXNxAH4ADJjsrXN0AAVMZW1tYXNxAH4ADPS1TBt0ABJwcm9kdWN0RWxlbWVudE5hbWVzcQB+AAwMXqopdAACbmVzcQB+AAzZU7KEdAACZXFzcQB+AAxTIw//dAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMB/WNzHQAAiMjc3EAfgAMef7RgnQACGZpbmFsaXplc3EAfgAMJFw4nXQADnByb2R1Y3RFbGVtZW50c3EAfgAMU7i4cXQACGhhc2hDb2Rlc3EAfgAMRfAqvXQAE3Byb2R1Y3RFbGVtZW50TmFtZXNzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBbeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAmc2ltcGxlLm5scC5ub3JtYWxpemVyLmxlbW1hdGl6ZXIuTGVtbWF1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AdHNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBbTAAJaW5oZXJpdGVkcQB+AFtMAAdwYXJlbnRzcQB+AFt4cQB+AHlzcQB+AHR1cQB+AFYAAAAAc3EAfgB0dXEAfgBWAAAAAHNxAH4AdHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAFc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AeHQADFNlcmlhbGl6YWJsZXNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AeHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AkXQAAmlvc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJJzcQB+AIV0AAdQcm9kdWN0c3EAfgCJc3EAfgCMdXEAfgCPAAAAAnNxAH4AkXQABXNjYWxhcQB+AJhzcQB+AIV0AAZFcXVhbHNxAH4Am3NxAH4AhXQABk9iamVjdHNxAH4AiXNxAH4AjHVxAH4AjwAAAANzcQB+AJFxAH4AlHNxAH4AkXQABGxhbmdxAH4AmHNxAH4AhXQAA0FueXEAfgCbdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAVc2ltcGxlLm5scC5ub3JtYWxpemVyc3EAfgCudAAGc2ltcGxlc3EAfgCudAAKc2ltcGxlLm5scHNxAH4ArnQAIHNpbXBsZS5ubHAubm9ybWFsaXplci5sZW1tYXRpemVyc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFKKuGGDggbeIQjZwXSFdKKWlUEpX
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwCclDLwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAXc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwLsY2H3QABm5vdGlmeXNxAH4ADI46Jj10AApMZW1tYXRpemVyc3EAfgAM+40WzHQABHdhaXRzcQB+AAyUyHzPdAANJGFzSW5zdGFuY2VPZnNxAH4ADCQy7tt0AApsb2FkTGVtbWFzc3EAfgAMJozZnnQABmVxdWFsc3NxAH4ADBGPI0p0AAxhc0luc3RhbmNlT2ZzcQB+AAx/rGnudAAMZXh0cmFjdExlbW1hc3EAfgAMY2n5r3QADHN5bmNocm9uaXplZHNxAH4ADESTPEB0AA0kaXNJbnN0YW5jZU9mc3EAfgAMbn61fnQACW5vdGlmeUFsbHNxAH4ADF5VA8p0AAxpc0luc3RhbmNlT2ZzcQB+AAwWS6KodAACPT1zcQB+AAyq2oJsdAAFY2xvbmVzcQB+AAzZKnVqdAAIdG9TdHJpbmdzcQB+AAzO/vk0dAACIT1zcQB+AAwQ4JOldAAIZ2V0Q2xhc3NzcQB+AAxjARHXdAACbmVzcQB+AAweFRjbdAACZXFzcQB+AAwGrMA2dAACIyNzcQB+AAxu6HyUdAAIZmluYWxpemVzcQB+AAyTzNszdAAIaGFzaENvZGVzcQB+AAwiBSVEdAAOcG9ydHVlc2VMZW1tYXNzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBFeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAArc2ltcGxlLm5scC5ub3JtYWxpemVyLmxlbW1hdGl6ZXIuTGVtbWF0aXplcnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBFTAAJaW5oZXJpdGVkcQB+AEVMAAdwYXJlbnRzcQB+AEV4cQB+AGNzcQB+AF51cQB+AEAAAAAAc3EAfgBedXEAfgBAAAAAAHNxAH4AXnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AYnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ae3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AfHNxAH4Ab3QAA0FueXNxAH4Ac3NxAH4AdnVxAH4AeQAAAAJzcQB+AHt0AAVzY2FsYXEAfgCCdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAVc2ltcGxlLm5scC5ub3JtYWxpemVyc3EAfgCMdAAGc2ltcGxlc3EAfgCMdAAKc2ltcGxlLm5scHNxAH4AjHQAIHNpbXBsZS5ubHAubm9ybWFsaXplci5sZW1tYXRpemVyc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFD1Ji9FDVcQDJCBGrhAckGqTsDO/
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwiNhMVQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAVc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwbcKzbnQABm5vdGlmeXNxAH4ADOFLNuV0AAR3YWl0c3EAfgAMgYsm9XQADSRhc0luc3RhbmNlT2ZzcQB+AAxW+hTKdAAGZXF1YWxzc3EAfgAMImpQYnQADGFzSW5zdGFuY2VPZnNxAH4ADDtqCTt0AAxzeW5jaHJvbml6ZWRzcQB+AAzQo30EdAANJGlzSW5zdGFuY2VPZnNxAH4ADKnbdpl0AAlub3RpZnlBbGxzcQB+AAxJieJ+dAAMaXNJbnN0YW5jZU9mc3EAfgAMRP3tUXQAAj09c3EAfgAM3oqTFnQABWNsb25lc3EAfgAMQx3c6HQACHRvU3RyaW5nc3EAfgAMbg/1uXQAAiE9c3EAfgAMPtcXc3QACGdldENsYXNzc3EAfgAMQjeOyXQAEE5vcm1hbGl6ZXJUb2tlbnNzcQB+AAz6EFdJdAAMYmluYXJ5U2VhcmNoc3EAfgAMwdRaSHQAAm5lc3EAfgAMcfrWv3QAAmVxc3EAfgAMGLu/hXQAAiMjc3EAfgAMGX4tqXQACGZpbmFsaXplc3EAfgAMiW/RG3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQALXNpbXBsZS5ubHAubm9ybWFsaXplci50b2tlbnMuTm9ybWFsaXplclRva2Vuc3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBBTAAJaW5oZXJpdGVkcQB+AEFMAAdwYXJlbnRzcQB+AEF4cQB+AF9zcQB+AFp1cQB+ADwAAAAAc3EAfgBadXEAfgA8AAAAAHNxAH4AWnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AXnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AXnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ad3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AeHNxAH4Aa3QAA0FueXNxAH4Ab3NxAH4AcnVxAH4AdQAAAAJzcQB+AHd0AAVzY2FsYXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAVc2ltcGxlLm5scC5ub3JtYWxpemVyc3EAfgCIdAAcc2ltcGxlLm5scC5ub3JtYWxpemVyLnRva2Vuc3NxAH4AiHQABnNpbXBsZXNxAH4AiHQACnNpbXBsZS5ubHBzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAXgCrfiPdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAJkM6XFNpbXBsZS1OTFBcYnVpbGRcY2xhc3Nlc1xzY2FsYVxtYWludAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUW57lHpik/y6zFAgyT+oPbhGqEx4=
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwDiTctwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAbc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwc1+XZXQABm5vdGlmeXNxAH4ADOjK76Z0AAR3YWl0c3EAfgAMMgjkoXQADGFycmF5TW9kdWx1c3NxAH4ADLT5iZ50AA0kYXNJbnN0YW5jZU9mc3EAfgAMvGXqdHQADU9wZXJhdG9yQXJyYXlzcQB+AAyomFbZdAAGZXF1YWxzc3EAfgAM/7gZxHQADGFzSW5zdGFuY2VPZnNxAH4ADFd0CQt0AAxzeW5jaHJvbml6ZWRzcQB+AAxxqOLodAANJGlzSW5zdGFuY2VPZnNxAH4ADBd98id0ABNzdW1BcnJheUNvb3JkaW5hdGVzc3EAfgAMaw3z3XQAB2ludmVyc2VzcQB+AAwepFhCdAAJbm90aWZ5QWxsc3EAfgAMu6+dJ3QAGG11bHRpcGx5QXJyYXlDb29yZGluYXRlc3NxAH4ADAha+5N0AAxpc0luc3RhbmNlT2ZzcQB+AAyLFffQdAAhbXVsdGlwbHlBcnJheUNvb3JkaW5hdGVzQnlFc2NhbGFyc3EAfgAM3FsHNnQAAj09c3EAfgAMvWrzo3QABWNsb25lc3EAfgAMt8+6mXQACHRvU3RyaW5nc3EAfgAM7mvk3HQAAiE9c3EAfgAMsCKlRnQACGdldENsYXNzc3EAfgAMnzlEuHQAEWV1Y2xpZGVhbkRpc3RhbmNlc3EAfgAMM2J663QAAm5lc3EAfgAM+C6lCXQAEWxpbmVhckNvbWJpbmF0aW9uc3EAfgAM+iDIYHQAAmVxc3EAfgAMHaD0s3QAAiMjc3EAfgAMwXXh03QACGZpbmFsaXplc3EAfgAMhgUfanQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ATXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAIXNpbXBsZS5ubHAub3BlcmF0b3IuT3BlcmF0b3JBcnJheXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AZnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBNTAAJaW5oZXJpdGVkcQB+AE1MAAdwYXJlbnRzcQB+AE14cQB+AGtzcQB+AGZ1cQB+AEgAAAAAc3EAfgBmdXEAfgBIAAAAAHNxAH4AZnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AanQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AanNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ag3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AhHNxAH4Ad3QAA0FueXNxAH4Ae3NxAH4AfnVxAH4AgQAAAAJzcQB+AIN0AAVzY2FsYXEAfgCKdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATc2ltcGxlLm5scC5vcGVyYXRvcnNxAH4AlHQABnNpbXBsZXNxAH4AlHQACnNpbXBsZS5ubHBzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAXgCrfiPdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAJkM6XFNpbXBsZS1OTFBcYnVpbGRcY2xhc3Nlc1xzY2FsYVxtYWludAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUBY9kE0tmR2KdxCm0TdoG1oJ6l1c=
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw61sFMgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAZc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw2MNY4nQABm5vdGlmeXNxAH4ADEnrF4R0ABdleHRyYWN0TnVtYmVyQWZ0ZXJUb2tlbnNxAH4ADLCotz10AAR3YWl0c3EAfgAMeEsBLHQADSRhc0luc3RhbmNlT2ZzcQB+AAzPWyDZdAANbG9hZFN0b3BXb3Jkc3NxAH4ADHVoqh10AAZlcXVhbHNzcQB+AAxzazqRdAAMYXNJbnN0YW5jZU9mc3EAfgAM6wHki3QADHN5bmNocm9uaXplZHNxAH4ADE9Oj2B0AA0kaXNJbnN0YW5jZU9mc3EAfgAMQtvqL3QAD3JlbW92ZVN1YnN0cmluZ3NxAH4ADIeOWKR0AAlub3RpZnlBbGxzcQB+AAzkroMRdAAMaXNJbnN0YW5jZU9mc3EAfgAMjr5gBXQAD09wZXJhdG9yTGV4aWNhbHNxAH4ADNIScxl0AAI9PXNxAH4ADKNAy0V0AAVjbG9uZXNxAH4ADPyX+Xx0AAtpc0FsbERpZ2l0c3NxAH4ADIacSKx0AAh0b1N0cmluZ3NxAH4ADFsXO/d0AAIhPXNxAH4ADK/lhTF0AAhnZXRDbGFzc3NxAH4ADEgUFN90AAJuZXNxAH4ADEi0NE90AAJlcXNxAH4ADCOXkrV0AAIjI3NxAH4ADF/z59l0AAhmaW5hbGl6ZXNxAH4ADAIFbiV0AAhoYXNoQ29kZXNxAH4ADGhH5ZJ0ABBleHRyYWN0U3Vic3RyaW5nc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ASXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAI3NpbXBsZS5ubHAub3BlcmF0b3IuT3BlcmF0b3JMZXhpY2FsdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQADHNjYWxhLm5hdGl2ZXNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBic3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AElMAAlpbmhlcml0ZWRxAH4ASUwAB3BhcmVudHNxAH4ASXhxAH4AZ3NxAH4AYnVxAH4ARAAAAABzcQB+AGJ1cQB+AEQAAAAAc3EAfgBidXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBmdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBmc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB/dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCAc3EAfgBzdAADQW55c3EAfgB3c3EAfgB6dXEAfgB9AAAAAnNxAH4Af3QABXNjYWxhcQB+AIZ1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAA3NyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABNzaW1wbGUubmxwLm9wZXJhdG9yc3EAfgCQdAAGc2ltcGxlc3EAfgCQdAAKc2ltcGxlLm5scHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABeAKt+I91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAAmQzpcU2ltcGxlLU5MUFxidWlsZFxjbGFzc2VzXHNjYWxhXG1haW50AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQuYLxJ1EqqHdF/hZtcld6b40Lrcg==
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwy3wglQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAVc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwzwKPenQAEVNpbWlsYXJpdHlDb3NzaW5lc3EAfgAMzsebNXQAEXNpbWlsYXJpdHlDb3NzaW5lc3EAfgAM2/t3wnQABm5vdGlmeXNxAH4ADECBLMN0AAR3YWl0c3EAfgAM5AGsoXQADSRhc0luc3RhbmNlT2ZzcQB+AAyvvSyedAAGZXF1YWxzc3EAfgAMlg+Sx3QADGFzSW5zdGFuY2VPZnNxAH4ADGoxgOl0AAxzeW5jaHJvbml6ZWRzcQB+AAwRVouxdAANJGlzSW5zdGFuY2VPZnNxAH4ADNAJFxN0AAlub3RpZnlBbGxzcQB+AAxtRCN4dAAMaXNJbnN0YW5jZU9mc3EAfgAMQUHsRnQAAj09c3EAfgAMCLtIuHQABWNsb25lc3EAfgAMyMd4cnQACHRvU3RyaW5nc3EAfgAMjWot/nQAAiE9c3EAfgAMDsHHTXQACGdldENsYXNzc3EAfgAMi7Hgm3QAAm5lc3EAfgAMEPNenXQAAmVxc3EAfgAMa+rmDXQAAiMjc3EAfgAMVCXv1nQACGZpbmFsaXplc3EAfgAMMyRbOnQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAJ3NpbXBsZS5ubHAuc2ltaWxhcml0eS5TaW1pbGFyaXR5Q29zc2luZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBBTAAJaW5oZXJpdGVkcQB+AEFMAAdwYXJlbnRzcQB+AEF4cQB+AF9zcQB+AFp1cQB+ADwAAAAAc3EAfgBadXEAfgA8AAAAAHNxAH4AWnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AXnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AXnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ad3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AeHNxAH4Aa3QAA0FueXNxAH4Ab3NxAH4AcnVxAH4AdQAAAAJzcQB+AHd0AAVzY2FsYXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAVc2ltcGxlLm5scC5zaW1pbGFyaXR5c3EAfgCIdAAGc2ltcGxlc3EAfgCIdAAKc2ltcGxlLm5scHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABeAKt+I91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAAmQzpcU2ltcGxlLU5MUFxidWlsZFxjbGFzc2VzXHNjYWxhXG1haW50AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSS5S6jwryoTcMLeb7U+Zhadca7cQ==
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwOjX46QAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAec3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwF2f3EXQAEVNpbWlsYXJpdHlDb3NzaW5lc3EAfgAM77MMqHQABm5vdGlmeXNxAH4ADLXYpSN0AApFbmNvZGVyTFNJc3EAfgAMRiDd7HQABHdhaXRzcQB+AAxCd1b9dAANJGFzSW5zdGFuY2VPZnNxAH4ADC6SNyB0AA1PcGVyYXRvckFycmF5c3EAfgAM9GKS7HQABmVxdWFsc3NxAH4ADFvdRZB0AAdEYXRhc2V0c3EAfgAMEupTlXQADGFzSW5zdGFuY2VPZnNxAH4ADG4KPKB0AAtUb2tlbml6YXRvcnNxAH4ADF6i7RJ0AAxzeW5jaHJvbml6ZWRzcQB+AAxf4YGgdAANJGlzSW5zdGFuY2VPZnNxAH4ADIHZ+iN0AAlub3RpZnlBbGxzcQB+AAyksYW9dAAOTGVhcm5pbmdMbG95ZHNzcQB+AAyl5Dq0dAAMaXNJbnN0YW5jZU9mc3EAfgAM23nSpXQAD09wZXJhdG9yTGV4aWNhbHNxAH4ADCP3EIF0AAI9PXNxAH4ADCn1Y/V0AAVjbG9uZXNxAH4ADAnHRjB0AAh0b1N0cmluZ3NxAH4ADO6gq3t0AAIhPXNxAH4ADKZ4XUZ0AAhnZXRDbGFzc3NxAH4ADD1TNnd0ABBOb3JtYWxpemVyVG9rZW5zc3EAfgAMPXUHWHQACVNpbXBsZU5MUHNxAH4ADIZSkqt0AA9MZWFybmluZ0dlbmV0aWNzcQB+AAwRjK+jdAACbmVzcQB+AAyMExuudAACZXFzcQB+AAy3YOZBdAANRW5jb2RlckJpbmFyeXNxAH4ADEc58nF0AAIjI3NxAH4ADOT42Od0AAhmaW5hbGl6ZXNxAH4ADMRj8QZ0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFN4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAB0ABRzaW1wbGUubmxwLlNpbXBsZU5MUHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AbHNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBTTAAJaW5oZXJpdGVkcQB+AFNMAAdwYXJlbnRzcQB+AFN4cQB+AHFzcQB+AGx1cQB+AE4AAAAAc3EAfgBsdXEAfgBOAAAAAHNxAH4AbHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AcHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AcHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AiXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AinNxAH4AfXQAA0FueXNxAH4AgXNxAH4AhHVxAH4AhwAAAAJzcQB+AIl0AAVzY2FsYXEAfgCQdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAJzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAGc2ltcGxlc3EAfgCadAAKc2ltcGxlLm5scHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABeAKt+I91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAAmQzpcU2ltcGxlLU5MUFxidWlsZFxjbGFzc2VzXHNjYWxhXG1haW50AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTopGxVT7gTL7QcoJ6ywd6Uw0p8Rw==
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwuwBDbQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAXc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwd9gPMnQABm5vdGlmeXNxAH4ADJJzev50AAR3YWl0c3EAfgAM9gfz23QADSRhc0luc3RhbmNlT2ZzcQB+AAwfhy7ndAAOdG9rZW5pemVDdXN0b21zcQB+AAwA18CGdAAGZXF1YWxzc3EAfgAMpBcnpXQADGFzSW5zdGFuY2VPZnNxAH4ADGsd2a90AAxzeW5jaHJvbml6ZWRzcQB+AAyCFRiVdAANJGlzSW5zdGFuY2VPZnNxAH4ADEt5vX10AAlub3RpZnlBbGxzcQB+AAyRCBNVdAAMaXNJbnN0YW5jZU9mc3EAfgAM4qy1/nQAAj09c3EAfgAMVx+tFXQABWNsb25lc3EAfgAM0DZfl3QACHRvU3RyaW5nc3EAfgAMafyVM3QAAiE9c3EAfgAMp9LjAnQAFnRva2VuaXplV2l0aE5vcm1hbGl6ZXJzcQB+AAxB4kC2dAAIZ2V0Q2xhc3NzcQB+AAzBGbFgdAAUdG9rZW5pemVCeVdoaXRlc3BhY2VzcQB+AAy46HWvdAACbmVzcQB+AAye1M6MdAAMVG9rZW5pemF0aW9uc3EAfgAMHDJJeXQAAmVxc3EAfgAMgTktUHQAAiMjc3EAfgAM34K6AnQACGZpbmFsaXplc3EAfgAMjjgitXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ARXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAJHNpbXBsZS5ubHAudG9rZW5pemF0aW9uLlRva2VuaXphdGlvbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBFTAAJaW5oZXJpdGVkcQB+AEVMAAdwYXJlbnRzcQB+AEV4cQB+AGNzcQB+AF51cQB+AEAAAAAAc3EAfgBedXEAfgBAAAAAAHNxAH4AXnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AYnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ae3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AfHNxAH4Ab3QAA0FueXNxAH4Ac3NxAH4AdnVxAH4AeQAAAAJzcQB+AHt0AAVzY2FsYXEAfgCCdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAGc2ltcGxlc3EAfgCMdAAKc2ltcGxlLm5scHNxAH4AjHQAF3NpbXBsZS5ubHAudG9rZW5pemF0aW9uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFJ3z41QrMb5n1dPgM1c1bhVBeBi9
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwA7LMcAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAVc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwG+lgdnQABm5vdGlmeXNxAH4ADEVw3Cl0AAR3YWl0c3EAfgAMApqqhHQADSRhc0luc3RhbmNlT2ZzcQB+AAyXWe3SdAAGZXF1YWxzc3EAfgAMXs/ArHQADGFzSW5zdGFuY2VPZnNxAH4ADP2ddt90AAxzeW5jaHJvbml6ZWRzcQB+AAy36h0VdAANJGlzSW5zdGFuY2VPZnNxAH4ADD83sC50AARtYWluc3EAfgAMNGXZJXQACW5vdGlmeUFsbHNxAH4ADIuC/aF0AAhBbmFsaXN5c3NxAH4ADKGpsBl0AAxpc0luc3RhbmNlT2ZzcQB+AAw64n28dAACPT1zcQB+AAw4L49VdAAFY2xvbmVzcQB+AAxIkY8HdAAIdG9TdHJpbmdzcQB+AAx+7hwYdAACIT1zcQB+AAwPuxpPdAAIZ2V0Q2xhc3NzcQB+AAyRqAl5dAACbmVzcQB+AAxRvvP9dAACZXFzcQB+AAwZOCWMdAACIyNzcQB+AAzf9uBidAAIZmluYWxpemVzcQB+AAx7OB04dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBBeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAZc2ltcGxlLnNlbnRpbWVudC5BbmFsaXN5c3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBBTAAJaW5oZXJpdGVkcQB+AEFMAAdwYXJlbnRzcQB+AEF4cQB+AF9zcQB+AFp1cQB+ADwAAAABc3IADXhzYnRpLmFwaS5EZWZSvp/ifLQ2aQIAAkwACnJldHVyblR5cGV0ABBMeHNidGkvYXBpL1R5cGU7WwAPdmFsdWVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvUGFyYW1ldGVyTGlzdDt4cQB+AEJxAH4AS3VxAH4ATAAAAABzcQB+AE4AcQB+AB11cQB+AFEAAAAAc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AXnQABFVuaXRzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AF5zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHp1cgAaW0x4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdDv10zod8rNw7gIAAHhwAAAAAXNyABd4c2J0aS5hcGkuUGFyYW1ldGVyTGlzdNbFvBxkSXTjAgACWgAKaXNJbXBsaWNpdFsACnBhcmFtZXRlcnN0ABxbTHhzYnRpL2FwaS9NZXRob2RQYXJhbWV0ZXI7eHAAdXIAHFtMeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlcjvPuMVdpd21bQIAAHhwAAAAAXNyABl4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyH0WuF9NJsOoCAARaAApoYXNEZWZhdWx0TAAIbW9kaWZpZXJ0AB1MeHNidGkvYXBpL1BhcmFtZXRlck1vZGlmaWVyO0wABG5hbWVxAH4ADUwAA3RwZXEAfgBneHAAfnIAG3hzYnRpLmFwaS5QYXJhbWV0ZXJNb2RpZmllcgAAAAAAAAAAEgAAeHEAfgBUdAAFUGxhaW50AARhcmdzc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgBuWwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgBec3EAfgBtdAAFQXJyYXlxAH4Ac3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAABc3EAfgBtdAAGU3RyaW5nc3EAfgBxc3EAfgB0dXEAfgB3AAAAA3NxAH4AeXQABGphdmFzcQB+AHl0AARsYW5ncQB+AH5zcQB+AFp1cQB+ADwAAAAAc3EAfgBadXEAfgCSAAAAAnNxAH4AbXQABk9iamVjdHEAfgCWc3EAfgBtdAADQW55cQB+AHN1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAnNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABBzaW1wbGUuc2VudGltZW50c3EAfgCndAAGc2ltcGxlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF4Aq34j3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ACZDOlxTaW1wbGUtTkxQXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFMyHIQtCAJdpmv+zRvLOo4b5OMoM
external apis:
0 items
source infos:
19 items
C:\Simple-NLP\src\main\scala\simple\csv\SimpleCSV.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\category\Category.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Data.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\dataset\Dataset.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\binary\EncoderBinary.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\EncoderLSI.scala -> 
AAAAAgAAAQAAABkAOSAgICB2YWwgaW5wdXRzUGFyYWxsZWwgPSBzcGFya0NvbnRleHQucGFyYWxsZWxpemUoaW5wdXRzKQEAAALqAQAAADIBADIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEATkM6XFNpbXBsZS1OTFBcc3JjXG1haW5cc2NhbGFcc2ltcGxlXG5scFxlbmNvZGVyXHdvcmRlbWJlZGRpbmdcRW5jb2RlckxTSS5zY2FsYQEATkM6XFNpbXBsZS1OTFBcc3JjXG1haW5cc2NhbGFcc2ltcGxlXG5scFxlbmNvZGVyXHdvcmRlbWJlZGRpbmdcRW5jb2RlckxTSS5zY2FsYQETbWV0aG9kIGNvcHlBcnJheVRvSW1tdXRhYmxlSW5kZXhlZFNlcSBpbiBjbGFzcyBMb3dQcmlvcml0eUltcGxpY2l0czIgaXMgZGVwcmVjYXRlZCAoc2luY2UgMi4xMy4wKTogSW1wbGljaXQgY29udmVyc2lvbnMgZnJvbSBBcnJheSB0byBpbW11dGFibGUuSW5kZXhlZFNlcSBhcmUgaW1wbGVtZW50ZWQgYnkgY29weWluZzsgVXNlIHRoZSBtb3JlIGVmZmljaWVudCBub24tY29weWluZyBBcnJheVNlcS51bnNhZmVXcmFwQXJyYXkgb3IgYW4gZXhwbGljaXQgdG9JbmRleGVkU2VxIGNhbGwBAAABAAAAOwA3ICAgIHZhbCBpbnB1dHNQYXJhbGxlbCA9IHNwYXJrQ29udGV4dC5wYXJhbGxlbGl6ZShhdXhWKQEAAAcVAQAAADIBADIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAEATkM6XFNpbXBsZS1OTFBcc3JjXG1haW5cc2NhbGFcc2ltcGxlXG5scFxlbmNvZGVyXHdvcmRlbWJlZGRpbmdcRW5jb2RlckxTSS5zY2FsYQEATkM6XFNpbXBsZS1OTFBcc3JjXG1haW5cc2NhbGFcc2ltcGxlXG5scFxlbmNvZGVyXHdvcmRlbWJlZGRpbmdcRW5jb2RlckxTSS5zY2FsYQETbWV0aG9kIGNvcHlBcnJheVRvSW1tdXRhYmxlSW5kZXhlZFNlcSBpbiBjbGFzcyBMb3dQcmlvcml0eUltcGxpY2l0czIgaXMgZGVwcmVjYXRlZCAoc2luY2UgMi4xMy4wKTogSW1wbGljaXQgY29udmVyc2lvbnMgZnJvbSBBcnJheSB0byBpbW11dGFibGUuSW5kZXhlZFNlcSBhcmUgaW1wbGVtZW50ZWQgYnkgY29weWluZzsgVXNlIHRoZSBtb3JlIGVmZmljaWVudCBub24tY29weWluZyBBcnJheVNlcS51bnNhZmVXcmFwQXJyYXkgb3IgYW4gZXhwbGljaXQgdG9JbmRleGVkU2VxIGNhbGwBAAAAAA==
C:\Simple-NLP\src\main\scala\simple\nlp\encoder\wordembedding\SVD.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\Cluster.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\clustering\LearningLloyds.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\learning\evolutionary\LearningGenetic.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemma.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\lemmatizer\Lemmatizer.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\normalizer\tokens\NormalizerTokens.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorArray.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\operator\OperatorLexical.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\similarity\SimilarityCossine.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\SimpleNLP.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\nlp\tokenization\Tokenization.scala -> 
AAAAAAAAAAA=
C:\Simple-NLP\src\main\scala\simple\sentiment\Analisys.scala -> 
AAAAAAAAAAA=
compilations:
79 items
00 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiOxGfl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
01 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiO5ZhZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
02 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiiL0qx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
03 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiibARh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
04 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiiiL9x1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
05 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiilaGV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
06 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiioVc11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
07 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiipylp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
08 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbiirUBp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
09 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi1NI/R1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
10 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi1P/xN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
11 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi1VwIl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
12 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi1YZVV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
13 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi1i4aB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
14 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi1n/J91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
15 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi1qfOZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
16 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi11i9B1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
17 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi2BF+51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
18 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi2EBYZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
19 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi2GyuB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
20 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi2UHBt1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
21 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi2XAHV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
22 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi2ZaMt1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
23 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi8kaX51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
24 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi8t9ip1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
25 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi804UF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
26 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi82xql1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
27 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9B0ed1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
28 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9E7hp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
29 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9HTtJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
30 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9IZ+t1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
31 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9NgmV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
32 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9Pg8F1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
33 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9TigJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
34 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9VlDp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
35 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9WTiN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
36 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9Zk/d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
37 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9d4SR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
38 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9gIHR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
39 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9g9qd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
40 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9hmup1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
41 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9lWcp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
42 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9m/Gh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
43 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9nky91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
44 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9o4Ip1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
45 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9ph3d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
46 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9tmNB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
47 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9yeV51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
48 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi9zmfp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
49 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi90Tp51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
50 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi900wN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
51 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi91RZF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
52 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi94lM51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
53 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi953SZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
54 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi97Lp11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
55 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+DHJR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
56 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+Dvu11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
57 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+El251cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
58 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+Fkh11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
59 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+J47d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
60 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+aibR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
61 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+bne91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
62 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+bteJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
63 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+c61l1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
64 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+ehhx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
65 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+fVNl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
66 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+of+N1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
67 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+qIT91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
68 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+rSFl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
69 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+vb6N1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
70 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+wBU11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
71 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+yNSF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
72 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+zoGJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
73 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+0Mpd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
74 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+1jNJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
75 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi+2vtZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
76 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi/AtIZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
77 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABbi/DSKR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASEM6XFVzZXJzXFdpbGxlclxEZXNrdG9wXHJlcG9zaXRvcmlvc1xzaW1wbGUtbmxwXGJ1aWxkXGNsYXNzZXNcc2NhbGFcbWFpbnQAAS8=
78 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABeAKt+I91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAJkM6XFNpbXBsZS1OTFBcYnVpbGRcY2xhc3Nlc1xzY2FsYVxtYWludAABLw==
