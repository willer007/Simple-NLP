<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ea4d895a-e54d-426d-a91c-d87791d4837e" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/4.10.3/fileContent/fileContent.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/4.10.3/fileContent/fileContent.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/4.10.3/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/4.10.3/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/4.10.3/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/4.10.3/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/4.10.3/taskHistory/taskHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/4.10.3/taskHistory/taskHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/4.10.3/taskHistory/taskHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/4.10.3/taskHistory/taskHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/Row$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/Row$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/Row.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/Row.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/SimpleCSV$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/SimpleCSV$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/SimpleCSV.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/csv/SimpleCSV.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/SimpleNLP$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/SimpleNLP$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/SimpleNLP.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/SimpleNLP.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/category/Category$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/category/Category$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/category/Category.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/category/Category.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Data$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Data$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Data.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Data.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Dataset$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Dataset$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Dataset.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/dataset/Dataset.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/binary/EncoderBinary$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/binary/EncoderBinary$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/binary/EncoderBinary.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/binary/EncoderBinary.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/EncoderLSI$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/EncoderLSI$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/EncoderLSI.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/EncoderLSI.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/SVD$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/SVD$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/SVD.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/encoder/wordembedding/SVD.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/Cluster$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/Cluster$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/Cluster.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/Cluster.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/LearningLloyds$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/LearningLloyds$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/LearningLloyds.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/clustering/LearningLloyds.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/evolutionary/LearningGenetic$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/evolutionary/LearningGenetic$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/evolutionary/LearningGenetic.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/learning/evolutionary/LearningGenetic.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemma$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemma$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemma.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemma.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemmatizer$$anonfun$extractLemma$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemmatizer$$anonfun$extractLemma$2.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemmatizer$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemmatizer$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemmatizer.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/lemmatizer/Lemmatizer.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/tokens/NormalizerTokens$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/tokens/NormalizerTokens$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/tokens/NormalizerTokens.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/normalizer/tokens/NormalizerTokens.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorArray$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorArray$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorArray.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorArray.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorLexical$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorLexical$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorLexical.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/operator/OperatorLexical.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/similarity/SimilarityCossine$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/similarity/SimilarityCossine$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/similarity/SimilarityCossine.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/similarity/SimilarityCossine.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/tokenization/Tokenization$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/tokenization/Tokenization$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/tokenization/Tokenization.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/nlp/tokenization/Tokenization.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/sentiment/Analisys$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/sentiment/Analisys$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/main/simple/sentiment/Analisys.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/main/simple/sentiment/Analisys.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/test/nlp/encoder/wordembedding/EncoderLSITest$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/test/nlp/encoder/wordembedding/EncoderLSITest$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/test/nlp/encoder/wordembedding/EncoderLSITest.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/test/nlp/encoder/wordembedding/EncoderLSITest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/clustering/LearningLloydsTest$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/clustering/LearningLloydsTest$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/clustering/LearningLloydsTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/clustering/LearningLloydsTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/evolutionary/LearningGeneticTest$.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/evolutionary/LearningGeneticTest$.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/evolutionary/LearningGeneticTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/scala/test/nlp/learning/evolutionary/LearningGeneticTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/libs/SimpleNLP-1.0-SNAPSHOT.jar" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/SimpleNLP-1.0-SNAPSHOT.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/css/base-style.css" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/css/base-style.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/css/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/css/style.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/js/report.js" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/js/report.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileScala.analysis" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileScala.analysis" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileScala.analysis.relations" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileScala.analysis.relations" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileScala.mapping" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileScala.mapping" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileTestScala.analysis" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileTestScala.analysis" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileTestScala.analysis.relations" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/scala/compilerAnalysis/compileTestScala.analysis.relations" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/scala/simple/nlp/normalizer/tokens/NormalizerTokens.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/scala/simple/nlp/normalizer/tokens/NormalizerTokens.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/scala/nlp/learning/clustering/LearningLloydsTest.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/scala/nlp/learning/clustering/LearningLloydsTest.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="CoverageViewManager">
    <option name="myElementSize" value="182" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="testRunner" value="GRADLE" />
    <option name="delegatedBuild" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="SimpleNLP" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="SimpleNLP" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="SimpleNLP" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Scala Class" />
        <option value="Package Object" />
        <option value="Class" />
        <option value="Scala Object" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1RbU7FdQXe9V6uPi0Tm0L6iov6E" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="TEXT" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
  </component>
  <component name="RunManager" selected="Application.LearningLloydsTest">
    <configuration name="Analisys" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="simple.sentiment.Analisys" />
      <module name="SimpleNLP.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="simple.sentiment.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EncoderLSITest" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="nlp.encoder.wordembedding.EncoderLSITest" />
      <module name="SimpleNLP.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nlp.encoder.wordembedding.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LearningLloydsTest" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="nlp.learning.clustering.LearningLloydsTest" />
      <module name="SimpleNLP.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nlp.learning.clustering.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
      <option name="arquillianRunConfiguration">
        <value>
          <option name="containerStateName" value="" />
        </value>
      </option>
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="simple-nlp [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <configuration name="simple-nlp [clean]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="clean" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.simple-nlp [build]" />
        <item itemvalue="Application.Analisys" />
        <item itemvalue="Application.EncoderLSITest" />
        <item itemvalue="Application.LearningLloydsTest" />
        <item itemvalue="Gradle.simple-nlp [clean]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ea4d895a-e54d-426d-a91c-d87791d4837e" name="Default Changelist" comment="" />
      <created>1567169942809</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1567169942809</updated>
      <workItem from="1567169946030" duration="14946000" />
      <workItem from="1567428675105" duration="26153000" />
      <workItem from="1567516652800" duration="18238000" />
      <workItem from="1567537151576" duration="2583000" />
      <workItem from="1567601899824" duration="61000" />
      <workItem from="1567619116777" duration="9969000" />
      <workItem from="1567701339224" duration="14975000" />
      <workItem from="1567718836972" duration="868000" />
      <workItem from="1567782626098" duration="9785000" />
      <workItem from="1568033702236" duration="15390000" />
      <workItem from="1568120396054" duration="144000" />
      <workItem from="1568141855981" duration="5326000" />
      <workItem from="1568207827293" duration="13989000" />
      <workItem from="1568292594580" duration="776000" />
      <workItem from="1568394375711" duration="623000" />
      <workItem from="1614952421401" duration="347000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="133826000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/main/scala/simple/nlp/learning/clustering/LearningLloyds.scala</url>
          <line>63</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/main/scala/simple/sentiment/Analisys.scala</url>
          <line>44</line>
          <option name="timeStamp" value="20" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/main/scala/simple/sentiment/Analisys.scala</url>
          <line>43</line>
          <option name="timeStamp" value="21" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/yank_nlp$testEncoderLSI__1_.ic" NAME="testEncoderLSI (1) Coverage Results" MODIFIED="1568039770473" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>nlp.encoders.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/yank_nlp$EncoderLSI.ic" NAME="EncoderLSI Coverage Results" MODIFIED="1567703913423" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>nlp.encoders.*</FILTER>
    </SUITE>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>